/*@{
(define unique-counter (cell 0))
(define (new-unique-var) {u@{(read-cell unique-counter)}@})

(define global-vars-light (cell (list)))
(define global-vars-dark  (cell (list)))

(define (color light dark)
    (let* [ (var-name (new-unique-var))
            (global-light {--@{var-name}@: @{light}@;})
            (global-dark  {--@{var-name}@: @{dark}@;})
        ]
        (update-cell! global-vars-light (lambda (vs) (append vs global-light)))
        (update-cell! global-vars-dark  (lambda (vs) (append vs global-dark)))

        {var(--@{var-name}@);}
    ))

(define (write-global-light) 
    (defer (
        (concat "\n" (read-cell global-vars-light))
    )))

(define (write-global-dark) 
    (defer (
        (concat "\n" (read-cell global-vars-dark))
    )))
}@*/
    
body {
    @{write-global-light}@
}

body.dark {
    @{write-global-dark}@
}


h1 {
    color: @{(color {#000} {#fff}))}@;
}

h2 {
    color: @{(color {#333} {#ccc})}@;
}
